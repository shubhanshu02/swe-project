package swe.impl;

import swe.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultAssignment <br>
 * @version generated on Tue Mar 29 22:00:16 IST 2022 by shubh
 */
public class DefaultAssignment extends WrappedIndividualImpl implements Assignment {

    public DefaultAssignment(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#has_report
     */
     
    public Collection<? extends Progress_Report> getHas_report() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HAS_REPORT,
                                               DefaultProgress_Report.class);
    }

    public boolean hasHas_report() {
	   return !getHas_report().isEmpty();
    }

    public void addHas_report(Progress_Report newHas_report) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HAS_REPORT,
                                       newHas_report);
    }

    public void removeHas_report(Progress_Report oldHas_report) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HAS_REPORT,
                                          oldHas_report);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#assignment_id
     */
     
    public Collection<? extends Integer> getAssignment_id() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_ID, Integer.class);
    }

    public boolean hasAssignment_id() {
		return !getAssignment_id().isEmpty();
    }

    public void addAssignment_id(Integer newAssignment_id) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_ID, newAssignment_id);
    }

    public void removeAssignment_id(Integer oldAssignment_id) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_ID, oldAssignment_id);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#assignment_title
     */
     
    public Collection<? extends String> getAssignment_title() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_TITLE, String.class);
    }

    public boolean hasAssignment_title() {
		return !getAssignment_title().isEmpty();
    }

    public void addAssignment_title(String newAssignment_title) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_TITLE, newAssignment_title);
    }

    public void removeAssignment_title(String oldAssignment_title) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ASSIGNMENT_TITLE, oldAssignment_title);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#ps_link
     */
     
    public Collection<? extends URI> getPs_link() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PS_LINK, URI.class);
    }

    public boolean hasPs_link() {
		return !getPs_link().isEmpty();
    }

    public void addPs_link(URI newPs_link) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PS_LINK, newPs_link);
    }

    public void removePs_link(URI oldPs_link) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PS_LINK, oldPs_link);
    }


}

package swe.impl;

import swe.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPerson <br>
 * @version generated on Tue Mar 29 22:00:16 IST 2022 by shubh
 */
public class DefaultPerson extends WrappedIndividualImpl implements Person {

    public DefaultPerson(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#belongs_to
     */
     
    public Collection<? extends Department> getBelongs_to() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_BELONGS_TO,
                                               DefaultDepartment.class);
    }

    public boolean hasBelongs_to() {
	   return !getBelongs_to().isEmpty();
    }

    public void addBelongs_to(Department newBelongs_to) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_BELONGS_TO,
                                       newBelongs_to);
    }

    public void removeBelongs_to(Department oldBelongs_to) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_BELONGS_TO,
                                          oldBelongs_to);
    }


    /* ***************************************************
     * Object Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#posted_by
     */
     
    public Collection<? extends Comment> getPosted_by() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_POSTED_BY,
                                               DefaultComment.class);
    }

    public boolean hasPosted_by() {
	   return !getPosted_by().isEmpty();
    }

    public void addPosted_by(Comment newPosted_by) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_POSTED_BY,
                                       newPosted_by);
    }

    public void removePosted_by(Comment oldPosted_by) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_POSTED_BY,
                                          oldPosted_by);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#person_email
     */
     
    public Collection<? extends String> getPerson_email() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_EMAIL, String.class);
    }

    public boolean hasPerson_email() {
		return !getPerson_email().isEmpty();
    }

    public void addPerson_email(String newPerson_email) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_EMAIL, newPerson_email);
    }

    public void removePerson_email(String oldPerson_email) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_EMAIL, oldPerson_email);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#person_name
     */
     
    public Collection<? extends String> getPerson_name() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, String.class);
    }

    public boolean hasPerson_name() {
		return !getPerson_name().isEmpty();
    }

    public void addPerson_name(String newPerson_name) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, newPerson_name);
    }

    public void removePerson_name(String oldPerson_name) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_NAME, oldPerson_name);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#person_password
     */
     
    public Collection<? extends String> getPerson_password() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_PASSWORD, String.class);
    }

    public boolean hasPerson_password() {
		return !getPerson_password().isEmpty();
    }

    public void addPerson_password(String newPerson_password) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_PASSWORD, newPerson_password);
    }

    public void removePerson_password(String oldPerson_password) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_PERSON_PASSWORD, oldPerson_password);
    }


}

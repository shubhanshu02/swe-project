package swe.impl;

import swe.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultProgress_Report <br>
 * @version generated on Tue Mar 29 22:00:16 IST 2022 by shubh
 */
public class DefaultProgress_Report extends WrappedIndividualImpl implements Progress_Report {

    public DefaultProgress_Report(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#date
     */
     
    public Collection<? extends Object> getDate() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE, Object.class);
    }

    public boolean hasDate() {
		return !getDate().isEmpty();
    }

    public void addDate(Object newDate) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE, newDate);
    }

    public void removeDate(Object oldDate) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DATE, oldDate);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#description
     */
     
    public Collection<? extends String> getDescription() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, String.class);
    }

    public boolean hasDescription() {
		return !getDescription().isEmpty();
    }

    public void addDescription(String newDescription) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, newDescription);
    }

    public void removeDescription(String oldDescription) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, oldDescription);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#maximum_marks
     */
     
    public Collection<? extends Integer> getMaximum_marks() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMUM_MARKS, Integer.class);
    }

    public boolean hasMaximum_marks() {
		return !getMaximum_marks().isEmpty();
    }

    public void addMaximum_marks(Integer newMaximum_marks) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMUM_MARKS, newMaximum_marks);
    }

    public void removeMaximum_marks(Integer oldMaximum_marks) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MAXIMUM_MARKS, oldMaximum_marks);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#report_id
     */
     
    public Collection<? extends Integer> getReport_id() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REPORT_ID, Integer.class);
    }

    public boolean hasReport_id() {
		return !getReport_id().isEmpty();
    }

    public void addReport_id(Integer newReport_id) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REPORT_ID, newReport_id);
    }

    public void removeReport_id(Integer oldReport_id) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_REPORT_ID, oldReport_id);
    }


}

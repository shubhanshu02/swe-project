package swe.impl;

import swe.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultReport_Comment <br>
 * @version generated on Tue Mar 29 22:00:16 IST 2022 by shubh
 */
public class DefaultReport_Comment extends WrappedIndividualImpl implements Report_Comment {

    public DefaultReport_Comment(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#commented_on
     */
     
    public Collection<? extends Progress_Report> getCommented_on() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_COMMENTED_ON,
                                               DefaultProgress_Report.class);
    }

    public boolean hasCommented_on() {
	   return !getCommented_on().isEmpty();
    }

    public void addCommented_on(Progress_Report newCommented_on) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_COMMENTED_ON,
                                       newCommented_on);
    }

    public void removeCommented_on(Progress_Report oldCommented_on) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_COMMENTED_ON,
                                          oldCommented_on);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#comment_message
     */
     
    public Collection<? extends String> getComment_message() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_MESSAGE, String.class);
    }

    public boolean hasComment_message() {
		return !getComment_message().isEmpty();
    }

    public void addComment_message(String newComment_message) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_MESSAGE, newComment_message);
    }

    public void removeComment_message(String oldComment_message) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_MESSAGE, oldComment_message);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#comment_timestamp
     */
     
    public Collection<? extends Object> getComment_timestamp() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_TIMESTAMP, Object.class);
    }

    public boolean hasComment_timestamp() {
		return !getComment_timestamp().isEmpty();
    }

    public void addComment_timestamp(Object newComment_timestamp) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_TIMESTAMP, newComment_timestamp);
    }

    public void removeComment_timestamp(Object oldComment_timestamp) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_TIMESTAMP, oldComment_timestamp);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/shubh/ontologies/2022/2/untitled-ontology-4#comment_visibility
     */
     
    public Collection<? extends Boolean> getComment_visibility() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_VISIBILITY, Boolean.class);
    }

    public boolean hasComment_visibility() {
		return !getComment_visibility().isEmpty();
    }

    public void addComment_visibility(Boolean newComment_visibility) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_VISIBILITY, newComment_visibility);
    }

    public void removeComment_visibility(Boolean oldComment_visibility) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_COMMENT_VISIBILITY, oldComment_visibility);
    }


}
